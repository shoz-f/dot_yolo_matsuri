# 怒涛のよろず祭り(OnnxInterp編)

```elixir
File.cd!(__DIR__)
# for windows JP
System.shell("chcp 65001")

Mix.install([
  {:yolos, path: "."},
  {:kino, "~> 0.7.0"}
])
```

## 1.Implementation with OnnxInterp in Elixir

```elixir
defmodule LiveYOLOs do
  @palette CImg.Util.rand_palette("./model_bank/coco.label")

  def run(yolo, path) do
    img = CImg.load(path)

    with {:ok, res} = yolo.apply(img) do
      Enum.reduce(res, CImg.builder(img), &draw_item(&1, &2))
      |> CImg.display_kino(:jpeg)
    end
  end

  def run_all(path) do
    img = CImg.load(path)

    Enum.map(YOLOs.Application.yolos(), fn yolo ->
      with {:ok, res} = yolo.apply(img) do
        Enum.reduce(res, CImg.builder(img), &draw_item(&1, &2))
        |> CImg.display_kino(:jpeg)
      end
    end)
  end

  defp draw_item({item, boxes}, canvas) do
    color = @palette[item]

    Enum.reduce(boxes, canvas, fn [_score, x1, y1, x2, y2, _index], canvas ->
      x1 = max(x1, 0.0)
      y1 = max(y1, 0.0)
      x2 = min(x2, 1.0)
      y2 = min(y2, 1.0)

      CImg.fill_rect(canvas, x1, y1, x2, y2, color, 0.35)
    end)
  end
end
```

## 2.Let's try it

```elixir
LiveYOLOs.run(YOLOv4, "data/dog.jpg")
```

```elixir
LiveYOLOs.run_all("data/dog.jpg")
|> Kino.Layout.grid(columns: 2)
```

## 3.TIL ;-)

## Appendix

### Original work:

1. YOLOv3: https://github.com/hunglc007/tensorflow-yolov4-tflite
2. YOLOv4: https://github.com/Tianxiaomo/pytorch-YOLOv4
3. YOLOv5: https://github.com/ultralytics/yolov5
4. YOLOv6: https://github.com/meituan/YOLOv6
5. YOLOv7: https://github.com/WongKinYiu/yolov7
6. YOLOX: https://github.com/Megvii-BaseDetection/YOLOX

&#9633;
